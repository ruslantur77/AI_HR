"""initial

Revision ID: 2342d36f9e1a
Revises:
Create Date: 2025-09-03 03:31:05.723294

"""

import uuid
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2342d36f9e1a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class UUID(sa.TypeDecorator):
    impl = sa.String(36)
    cache_ok = True

    def process_bind_param(self, value, dialect):
        if value is None:
            return None
        if not isinstance(value, uuid.UUID):
            value = uuid.UUID(str(value))
        return value

    def process_result_value(self, value, dialect):
        if value is None:
            return None
        return uuid.UUID(value)


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "candidates",
        sa.Column("id", UUID(length=36), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "users",
        sa.Column("id", UUID(length=36), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("ADMIN", "RECRUITER", name="user_role"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "vacancies",
        sa.Column("id", UUID(length=36), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("OPEN", "CLOSED", name="vacancy_status"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("jti", UUID(length=36), nullable=False),
        sa.Column("user_id", UUID(length=36), nullable=False),
        sa.Column("token_hash", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("jti"),
        sa.UniqueConstraint("token_hash"),
    )
    op.create_table(
        "resumes",
        sa.Column("id", UUID(length=36), nullable=False),
        sa.Column("candidate_id", UUID(length=36), nullable=False),
        sa.Column("vacancy_id", UUID(length=36), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.Column(
            "auto_screening_status",
            sa.Enum("PENDING", "PASSED", "REJECTED", name="auto_screening_status"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidates.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vacancy_id"],
            ["vacancies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("candidate_id"),
    )
    op.create_table(
        "interviews",
        sa.Column("id", UUID(length=36), nullable=False),
        sa.Column("resume_id", UUID(length=36), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("passed_at", sa.DateTime(), nullable=True),
        sa.Column(
            "result",
            sa.Enum("PENDING", "PASSED", "REJECTED", name="interview_result"),
            nullable=False,
        ),
        sa.Column("feedback_hr", sa.Text(), nullable=True),
        sa.Column("feedback_candidate", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["resume_id"],
            ["resumes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("resume_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("interviews")
    op.drop_table("resumes")
    op.drop_table("refresh_tokens")
    op.drop_table("vacancies")
    op.drop_table("users")
    op.drop_table("candidates")
    # ### end Alembic commands ###
