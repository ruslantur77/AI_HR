import requests
import os

cv = 'резюме'
requirements ='требования'

API_KEY = os.getenv("OPENROUTER_API_KEY", "api-key")
URL = "https://openrouter.ai/api/v1/chat/completions"
HEADERS = {
    "Authorization": f"Bearer {API_KEY}",
    "Content-Type": "application/json"
}

def get_verdict(requirements, cv):
    system_prompt = """
Ты — AI-ассистент рекрутера. Твоя задача — объективно оценить, соответствует резюме кандидата предоставленным требованиям на позицию системного аналитика.

# Инструкция:
1. Внимательно изучи ТРЕБОВАНИЯ к вакансии и РЕЗЮМЕ кандидата.
2. Проведи детальный анализ по ключевым критериям: опыт работы, ключевые навыки (Hard Skills), знание методологий, инструментов и технологий.
3. Основное внимание уделяй содержанию, а не форме составления резюме.
4. Сравни каждый ключевой пункт из требований с тем, что написано в резюме.

# Критерий для возврата True (Принять):
- Кандидат имеет подтвержденный опыт работы на аналогичной позиции (Системный или Бизнес-аналитик), соответствующий требуемому (или больше).
- В резюме четко видны и совпадают КЛЮЧЕВЫЕ навыки из требований (например: сбор требований, написание ТЗ/User Stories, работа с SQL, BPMN/UML, Jira, Confluence, понимание SDLC/Agile).
- Резюме демонстрирует релевантный опыт решения задач, указанных в обязанностях.

# Критерий для возврата False (Отклонить):
- Опыт работы отсутствует или значительно меньше требуемого.
- В резюме отсутствует большинство КЛЮЧЕВЫХ hard skills из требований (например, нет ни SQL, ни работы с требованиями, ни знания методологий).
- Кандидат является специалистом из смежной или совершенно другой области (разработчик, тестировочник, менеджер) без перечисленного опыта в анализе.

# Важно:
- Не отклоняй кандидата только из-за отсутствия части желательных (Nice to have) навыков.
- Если ключевые требования совпадают, а уровень английского или какие-то второстепенные технологии не указаны — это не повод для False.
- Твой ответ должен быть строго одним словом: `True` или `False`. Никаких пояснений, комментариев, отступлений или форматирования в ответе быть не должно.
"""
    user_prompt = f"""
ТРЕБОВАНИЯ К ВАКАНСИИ:
{requirements}

РЕЗЮМЕ КАНДИДАТА:
{cv}

Соответствует ли кандидат основным требованиям? Ответь только True или False.
"""

    payload = {
        "model": "deepseek/deepseek-chat-v3.1",
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ],
        "temperature": 0.1
    }

    try:
        resp = requests.post(URL, headers=HEADERS, json=payload, timeout=60)
        if resp.ok:
            return resp.json()["choices"][0]["message"]["content"].strip().upper()
        else:
            return f"ERROR: {resp.status_code}"
    except Exception as e:
        return f"EXCEPTION: {e}"